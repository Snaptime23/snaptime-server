syntax = "proto3";

// 定义go生成后的包名
option go_package = "./;videoApi";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// protoc -I=. -I=$GOPATH/pkg/mod --go-grpc_out=. --gogo_out=. *.proto
package video;

message UserInfo {
  string UserId = 1 [json_name = "user_id", (gogoproto.jsontag) = "user_id"];
  string UserName = 2 [json_name = "user_name", (gogoproto.jsontag) = "user_name"];
  int64 FollowCount = 3 [json_name = "follow_count", (gogoproto.jsontag) = "follow_count"];
  int64 FollowerCount = 4 [json_name = "follower_count", (gogoproto.jsontag) = "follower_count"];
  int64 IsFollow = 5 [json_name = "is_follow", (gogoproto.jsontag) = "is_follow"];
  string Avatar = 6 [json_name = "avatar", (gogoproto.jsontag) = "avatar"];
  int64 PublishNum = 7 [json_name = "publish_num", (gogoproto.jsontag) = "publish_num"];
  int64 FavouriteNum = 8 [json_name = "favourite_num", (gogoproto.jsontag) = "favourite_num"];
  int64 LikeNum = 9 [json_name = "like_num", (gogoproto.jsontag) = "like_num"];
  int64 ReceivedLikeNum = 10 [json_name = "received_like_num", (gogoproto.jsontag) = "received_like_num"];
}


message VideoInfo {
  string VideoID = 1 [json_name = "video_id", (gogoproto.jsontag) = "video_id"];
  UserInfo Author = 2 [json_name = "author", (gogoproto.jsontag) = "author"];
  string PlayUrl = 3 [json_name = "play_url", (gogoproto.jsontag) = "play_url"];
  string CoverUrl = 4 [json_name = "cover_url", (gogoproto.jsontag) = "cover_url"];
  int64 FavoriteCount = 5 [json_name = "favorite_count", (gogoproto.jsontag) = "favorite_count"];
  int64 CommentCount = 6 [json_name = "comment_count", (gogoproto.jsontag) = "comment_count"];
  int64 IsFavorite = 7 [json_name = "is_favorite", (gogoproto.jsontag) = "is_favorite"];
  string Title = 8 [json_name = "title", (gogoproto.jsontag) = "title"];
  bool IsEncoding = 9 [json_name = "is_encoding", (gogoproto.jsontag) = "is_encoding"];
}

message VideoFeedReq {
  int64 LatestTime = 1 [json_name = "latest_time", (gogoproto.jsontag) = "latest_time"];
}
message VideoFeedResp {
  repeated VideoInfo VideoList = 1 [json_name = "video_info", (gogoproto.jsontag) = "video_info"];
}

message UploadVideoReq {
  string Description = 1 [json_name = "description", (gogoproto.jsontag) = "description"];
  string Title = 2 [json_name = "title", (gogoproto.jsontag) = "title"];
  repeated string VideoTag = 3 [json_name = "video_tag", (gogoproto.jsontag) = "video_tag"];
  string FileExtension = 4 [json_name = "file_extension", (gogoproto.jsontag) = "file_extension"];
  string UserId = 5 [json_name = "user_id", (gogoproto.jsontag) = "user_id"];
  string VideoId = 6 [json_name = "video_id", (gogoproto.jsontag) = "video_id"];
}
message UploadVideoResp {
  string Token = 1 [json_name = "token", (gogoproto.jsontag) = "token"];
  string ResourceKey = 2 [json_name = "resource_key", (gogoproto.jsontag) = "resource_key"];
  string VideoId = 3 [json_name = "video_id", (gogoproto.jsontag) = "video_id"];
}

message DownloadReq {
}
message DownLoadResp {
  string Token = 1 [json_name = "token", (gogoproto.jsontag) = "token"];
}

message GetVideoInfoByIdReq {
  string VideoId = 1 [json_name = "video_id", (gogoproto.jsontag) = "video_id"];
}
message GetVideoInfoByIdResp {
  VideoInfo Video = 1 [json_name = "video", (gogoproto.jsontag) = "video"];
}

message RebackOneReq {
  string Title = 1 [json_name = "title", (gogoproto.jsontag) = "title"];
  string CoverUrl = 2 [json_name = "cover_url", (gogoproto.jsontag) = "cover_url"];
}
message RebackOneResp {
}

message RebackTwoReq {
  string Title = 1;
  repeated string ResourceKey = 2;
  repeated string Type = 3;
  string VideoId = 4;
  repeated int64 Quality = 5;
}
message RebackTwoResp {
}

message PublishListReq {
  string UserId = 1 [json_name = "user_id", (gogoproto.jsontag) = "user_id"];
}
message PublishListResp {
  repeated VideoInfo Video = 1 [json_name = "video", (gogoproto.jsontag) = "video"];
}

message SearchVideoByVideoTagReq {
  string VideoTag = 1 [json_name = "video_tag", (gogoproto.jsontag) = "video_tag"];
}
message SearchVideoByVideoTagResp {
  repeated VideoInfo Video = 1 [json_name = "video_info", (gogoproto.jsontag) = "video_info"];
}

message InrcCommentCountReq {
  string VideoId = 1;
  int64 Count = 2;
}
message InrcCommentCountResp {
}

// 定义接口
service VideoService {
  rpc VideoFeed (VideoFeedReq) returns(VideoFeedResp);
  rpc UploadVideo (UploadVideoReq) returns (UploadVideoResp);
  rpc DownLoadVideo (DownloadReq) returns (DownLoadResp);
  rpc GetVideoInfoById (GetVideoInfoByIdReq) returns (GetVideoInfoByIdResp);
  rpc CallbackOne(RebackOneReq) returns (RebackOneResp);
  rpc CallbackTwo(RebackTwoReq) returns (RebackTwoResp);
  rpc PublishList (PublishListReq) returns (PublishListResp);
  rpc SearchVideoByVideoTag (SearchVideoByVideoTagReq) returns (SearchVideoByVideoTagResp);
  rpc InrcCommentCount (InrcCommentCountReq) returns (InrcCommentCountResp);
}
